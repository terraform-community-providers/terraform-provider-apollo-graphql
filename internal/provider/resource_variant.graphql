# @genqlient(for: "GraphVariant.url", pointer: true)
fragment Variant on GraphVariant {
  id
  name
  isPublic
  url
  graphId
}

query getVariant($serviceId: ID!, $variantName: String!) {
  service(id: $serviceId) {
    variant(name: $variantName) {
      ...Variant
    }
  }
}

mutation createVariant($serviceId: ID!, $variantName: String!) {
  service(id: $serviceId) {
    uploadSchema(tag: $variantName, schemaDocument: "scalar JSON") {
      success
    }
  }
}

mutation updateVariantURL(
  $serviceId: ID!
  $variantName: String!
  # @genqlient(pointer: true)
  $url: String
) {
  service(id: $serviceId) {
    variant(name: $variantName) {
      updateURL(url: $url) {
        ...Variant
      }
    }
  }
}

mutation updateVariantIsPublic(
  $serviceId: ID!
  $variantName: String!
  $isPublic: Boolean!
) {
  service(id: $serviceId) {
    variant(name: $variantName) {
      updateVariantIsPublic(isPublic: $isPublic) {
        ...Variant
      }
    }
  }
}

mutation deleteVariant($serviceId: ID!, $variantName: String!) {
  service(id: $serviceId) {
    variant(name: $variantName) {
      delete {
        deleted
      }
    }
  }
}
